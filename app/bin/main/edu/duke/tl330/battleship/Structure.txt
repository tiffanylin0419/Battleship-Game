
class Coordinate
final int row
final int column
int getRow()
int getColumn()
constructor: (int t, int c)(String)
equals, hashCode, toString
int charToInt(char)

class Placement
final Coordinate where
final char orientation
Coordinate getWhere()
char getOrientation()
void checkOrientation(char)
Placement(Coordinate where, char orientation) 
equals, hashCode, toString
constructor: (String)


interface Ship<T> 
String getName
boolean occupiesCoordinates(Coordinate )
boolean isSunk()
void recordHitAt(Coordinate where)
boolean wasHitAt(Coordinate where);
T getDisplayInfoAt(Coordinate where)

abstract class BasicShip<T> implements Ship<T> 
protected HashMap<Coordinate, Boolean> myPieces;
protected ShipDisplayInfo<T> myDisplayInfo;
Constructor: (Iterable<Coordinate> where, ShipDisplayInfo<T> myDisplayInfo)
checkCoordinateInThisShip(Coordinate c)
//override function

Class RectangleShip<T> extends BasicShip<T>
private final String name;
String getName
Constructor:(String name, Coordinate upperLeft, int width, int height, ShipDisplayInfo<T> myDisplayInfo), (String name,Coordinate upperLeft, int width, int height, T data, T onHit), (Coordinate upperLeft, T data, T onHit) 
static HashSet<Coordinate> makeCoords(Coordinate upperLeft, int width, int height)


interface ShipDisplayInfo<T>
T getInfo(Coordinate where, boolean hit)

class SimpleShipDisplayInfo<T> implements ShipDisplayInfo<T>
private final T myData;
private final T onHit;
Constructor: (T md, T oh)
//override function




interface AbstractShipFactory<T> 
Ship<T> makeSubmarine(Placement where);
Ship<T> makeBattleship(Placement where);
Ship<T> makeCarrier(Placement where);
Ship<T> makeDestroyer(Placement where);

class V1ShipFactory implements AbstractShipFactory<Character>
protected Ship<Character> createShip(Placement where, int w, int h, char letter, String name)
//override function



interface Board<T>
int getWidth()
int getHeight()
boolean tryAddShip(Ship<T> toAdd)
T whatIsAt(Coordinate where)

class BattleShipBoard<T> implements Board<T>
final int width
final int height
final ArrayList<Ship<T>> myShips
//override function
Constructor: (int w, int h)(int w, int h, PlacementRuleChecker<T> placementChecker)


class BoardTextView
final Board<Character> toDisplay
BoardTextView(Board<Character> toDisplay) 
String displayMyOwnBoard()


